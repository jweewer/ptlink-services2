dnl $Id: configure.in,v 1.6 2004/10/23 11:50:46 jpinto Exp $
dnl Process this file with autoconf to produce a configure script.
dnl AC_INIT(include/class.h) <- what is this ? -TimeMr14C

AC_INIT

SB=`./shtool echo -n -e %B`
EB=`./shtool echo -n -e %b`
                                                                                
AC_DEFUN(BOLD_MESSAGE,[
              AC_MSG_RESULT()
              AC_MSG_RESULT(${SB}$1${EB})
              AC_MSG_RESULT()
	      ])

PACKAGE=ptlink-services
VERSION=`grep '#define.PATCHLEVEL' include/patchlevel.h|awk '{print $3}'|tr -d \"`
BOLD_MESSAGE(Configuring ${VERSION} ...)
AC_CONFIG_AUX_DIR(autoconf)
AC_CONFIG_HEADER(include/setup.h)
AC_PREFIX_DEFAULT($HOME/services)

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

OLD_CFLAGS="$CFLAGS"
dnl Checks for programs.
AC_PROG_CC
dnl Make sure autoconf doesnt interfere with cflags -jmallett
CFLAGS="$OLD_CFLAGS"

dnl Check for various compilers. -jmallett
SGS=no
AC_MSG_CHECKING(if we are using TenDRA or MIPSpro)
case `$CC -version 2>&1` in
  *TenDRA*)
    AC_MSG_RESULT(success! We will be using TenDRA.)
    TenDRA=yes
    SGS=yes
    ;;
  *MIPSpro*)
    AC_MSG_RESULT(success! We will be using MIPSpro.)
    MIPSpro=yes
    SGS=yes
    ;;
  *)
    AC_MSG_RESULT(no)
    TenDRA=no
    MIPSpro=no
    ;;
esac
AC_MSG_CHECKING(if we are using Sun WorkShop/Forte)
case `$CC -V 2>&1` in
  *Sun*WorkShop*)
    AC_MSG_RESULT(success! We are using Sun WorkShop/Forte.)
    SunWorkShop=yes
    SGS=yes
    ;;
  *Forte*Developer*)
    AC_MSG_RESULT(success! We are using Sun WorkShop/Forte.)
    SunWorkShop=yes
    SGS=yes
    ;;
  *)
    AC_MSG_RESULT(no)
    SunWorkShop=no
    ;;
esac
AC_MSG_CHECKING(if we are using Apple GCC)
case `$CC -v 2>&1 | tail -1` in
  *Apple*)
    AC_MSG_RESULT(success! We are using GCC from Apple.)
    AppleGCC=yes
    ;;
  *)
    AC_MSG_RESULT(no)
    AppleGCC=no
    ;;
esac

dnl SVR4 SGS based on what we know about the compiler -jmallett
AC_MSG_CHECKING(if your compiler supports the SVR4 Software Generation System interfaces)
if test "$SGS" = "yes"; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

dnl XXX This could be consecutive 'if' statements, and then check
dnl for a zero "$MAIN_CFLAGS" (but what should we use for TenDRA??)
dnl and then do the check for whether -g works... Hrrm. -jmallett
if test "x$GCC" = "xyes"; then
#  Use this for development..
#  MAIN_CFLAGS="-O2 -g -Wunused -Wall -Wshadow -Wmissing-declarations"
   MAIN_CFLAGS="-O2 -g "
else
  if test "x$TenDRA" = "xyes"; then
    dnl CPPFLAGS here is really MAIN_CFLAGS but autoconf does silly
    dnl things with the wrong variables, so this works. -jmallett
    MAIN_CFLAGS=""
    CPPFLAGS="$CPPFLAGS -Ylonglong -Yansi -I/usr/include"
  else
    if test "x$SunWorkShop" = "xyes"; then
      MAIN_CFLAGS="-fast -g -xinline=dlinkAdd,dlinkAddBefore,dlinkAddTail,dlinkDelete,dlink_list_length,dlink_node,dlinkMoveList,_MyMalloc,_MyRealloc,_MyFree,_DupString"
    else
      if test "x$MIPSpro" = "xyes"; then
        MAIN_CFLAGS="-g"
      else
        if test "x$ac_cv_prog_cc_g" = "xyes"; then
          MAIN_CFLAGS="-g"
        else
          MAIN_CFLAGS=""
        fi
      fi
    fi
  fi
fi

dnl cc on HPUX 11.00 does not produce any output on cc -V
dnl Therefore I will use the following hack to discover HPUX 
dnl -TimeMr14C

case `uname -s` in
        HP-UX*)
                AC_MSG_RESULT(HP-UX found - Assuming HPUX C compiler cc)  
		MAIN_CFLAGS="$MAIN_CFLAGS +e"
		HPUX=yes
		;;
	OSF*)
		OSF=yes
		;;
	*)
		;;
esac


AC_MSG_CHECKING(how to generate dependancy info)
if test "$SunWorkShop" = "yes"; then
  AC_MSG_RESULT(Sun WorkShop/Forte using $CC -xM)
  MKDEP="$CC -xM"
fi
if test "$HPUX" = "yes"; then
  AC_MSG_RESULT(HP-UX C Compiler using makedepend)
  MKDEP="makedepend"
fi
if test "x$MKDEP" = "x"; then
  AC_MSG_RESULT(assuming $CC -MM)
  MKDEP="$CC -MM"	
fi

AC_SUBST(MKDEP)

dnl jdc -- If CFLAGS is defined, best use it everywhere...
dnl NOTE: jv says it must be added to the *END*, because things like
dnl "gcc -O9 -O2" will result in -O2 getting preference.  How stupid.
if test "x$CFLAGS" != "x"; then
  MAIN_CFLAGS="$MAIN_CFLAGS $CPPFLAGS"
fi

AC_ISC_POSIX
AC_PROG_MAKE_SET
AC_PATH_PROG(RM, rm)
AC_PATH_PROG(CP, cp)
AC_PATH_PROG(MV, mv)
AC_PATH_PROG(LN, ln)
AC_PATH_PROG(SED, sed)
AC_PATH_PROG(AR, ar)
AC_PATH_PROG(LD, ld)

AC_PROG_INSTALL
AC_PROG_RANLIB
AC_C_INLINE

dnl check if sendmail was found
if test -f /usr/sbin/sendmail ; then
	AC_DEFINE(SENDMAIL,"/usr/sbin/sendmail", [Define sendmail path])
	echo "sendmail found at /usr/sbin/sendmail"
else 
	AC_PATH_PROG(SENDMAIL, sendmail)
fi
dnl use directory structure of cached as default (hack)
if test "$libexecdir" = '${exec_prefix}/libexec' &&
   test "$localstatedir" = '${prefix}/var'; then
        libexecdir='${bindir}'
        localstatedir='${prefix}'
fi

dnl Checks for libraries.
AC_CHECK_LIB(socket, socket)

dnl jdc -- Checks Solaris for libresolv and nsl; needed on Solaris 2.x
dnl AC_CHECK_LIB(resolv, main)
dnl AC_CHECK_LIB(nsl, main)

dnl AC_CHECK_LIB(bottle, beer, , AC_MSG_WARN(I have no more beer))

AC_CHECK_FUNC(crypt,, AC_CHECK_LIB(descrypt, crypt,,AC_CHECK_LIB(crypt, crypt,,)))


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(inttypes.h sys/resource.h sys/param.h unistd.h errno.h string.h strings.h sys/syslog.h stdlib.h stddef.h getopt.h)

dnl See whether we can include both string.h and strings.h.
AC_DEFUN(GCC_HEADER_STRING,
[AC_CACHE_CHECK([whether string.h and strings.h may both be included],
 gcc_cv_header_string,
[AC_TRY_COMPILE([#include <string.h>
#include <strings.h>], , gcc_cv_header_string=yes, gcc_cv_header_string=no)])
if test $gcc_cv_header_string = yes; then
 AC_DEFINE(STRING_WITH_STRINGS,[],[Define if you have strings.h])
fi
])

GCC_HEADER_STRING

dnl check for socklen_t
dnl we can't use ac_check_Type because it doesnt include the required files

AC_DEFUN(CHECK_SOCKLEN_T,
[
	AC_MSG_CHECKING(for socklen_t)
	AC_CACHE_VAL(have_socklen_t,
	[
		AC_TRY_COMPILE(
                        [#include <sys/types.h>
			#include <sys/socket.h>],
			[socklen_t xxx = 75;],
			have_socklen_t=yes,
			have_socklen_t=no)
	])
	AC_MSG_RESULT($have_socklen_t)
	if test "$have_socklen_t" = yes; then
		AC_DEFINE(HAVE_SOCKLEN_T, 1, [Define if you have socklen_t])
	fi
])

CHECK_SOCKLEN_T

dnl Check for stdarg.h - if we can't find it, halt configure
AC_CHECK_HEADER(stdarg.h, , AC_MSG_ERROR(** stdarg.h could not be found - ircd-hybrid will not compile without it **))

dnl Checks for the existance of strlcat
AC_CHECK_FUNCS(strlcat strlcpy)

dnl check for socketpair
AC_CHECK_FUNCS(socketpair)

dnl check for gethostbyname 
AC_CHECK_FUNCS(gethostbyname)

dnl check for gettimeofday
AC_CHECK_FUNCS(gettimeofday)

dnl check for snprintf
AC_CHECK_FUNCS(snprintf, [have_snprintf=1])
dnl check for vsnprintf
AC_CHECK_FUNCS(vsnprintf, [have_vsnprintf=1])
dnl Tell src/Makefile.in if we need its snprintf.c
if test -z "$have_snprintf"; then
	SNPRINTF_C="snprintf.c"
fi
if test -z "$have_vsnprintf"; then
	SNPRINTF_C="snprintf.c"
fi
AC_SUBST(SNPRINTF_C)

dnl check for mmap
AC_CHECK_FUNCS(mmap)

dnl check for setenv
AC_CHECK_FUNCS(setenv)

default_directory="/usr /usr/local"

AC_DEFUN(FAIL_MESSAGE,[
   echo
   echo
   echo "**********************************************"
   echo "  ERROR: unable to find" $1
   echo "  checked in the following places"
   for i in `echo $2`; do
     echo "        $i"
   done
   echo "**********************************************"
   echo
   exit
])


# Keep the previous state to check later
OLIBS=$LIBS

AC_ARG_WITH(mysql, 
    [  --with-mysql=DIR        support for mysql],
    [ with_mysql="$withval" ],
    [ with_mysql=no ])

if test "$with_mysql" != "no"; then
  if test "$with_mysql" = "yes"; then
    mysql_directory="$default_directory"; 
    mysql_fail="yes"
  elif test -d $withval; then
    mysql_directory="$withval"
    mysql_fail="no"
  elif test "$with_mysql" = ""; then
    mysql_directory="$default_directory"; 
    mysql_fail="no"
  fi

  AC_MSG_CHECKING(for mysql)

  for i in $mysql_directory; do
    if test -r $i/include/mysql/mysql.h; then
      MYSQL_DIR=$i
      MYSQL_INC_DIR=$i/include/mysql
    elif test -r $i/include/mysql.h; then
      MYSQL_DIR=$i
      MYSQL_INC_DIR=$i/include
    fi
  done

  if test -z "$MYSQL_DIR"; then
    if test "$mysql_fail" != "no"; then
      tmp=""
      for i in $mysql_directory; do
        tmp="$tmp $i/include $i/include/mysql" 
      done
      FAIL_MESSAGE("mysql headers (mysql.h)", $tmp)
    else
      AC_MSG_RESULT(no)
    fi
  else

    for i in lib lib/mysql; do
      str="$MYSQL_DIR/$i/libmysqlclient.*"
      for j in cho $str; do
        if test -r $j; then
          MYSQL_LIB_DIR="$MYSQL_DIR/$i"
          break 2
        fi
      done
    done

    if test -z "$MYSQL_LIB_DIR"; then
      if test "$mysql_fail" != "no"; then
        FAIL_MESSAGE("mysqlclient library", 
                     "$MYSQL_DIR/lib $MYSQL_DIR/lib/mysql")
      else
        AC_MSG_RESULT(no)
      fi
    else
      AC_MSG_RESULT(yes)
      LDFLAGS="${LDFLAGS} -L${MYSQL_LIB_DIR}"
      CPPFLAGS="${CPPFLAGS} -I${MYSQL_INC_DIR}"
      AC_DEFINE(HAVE_MYSQL,1, [Define if you have mysql development libraries])
      AC_SUBST(HAVE_MYSQL)
      AC_CHECK_LIB(z, compress)
      LIBS="${LIBS} -lmysqlclient"
    fi
  fi
fi

AC_MSG_CHECKING(if you want to do a profile build)
AC_ARG_ENABLE(profile,
[  --enable-profile             Enable profiling.
  --disable-profile            Disable profiling(default). ],
[
  case "$enableval" in
  yes)
    ac_cv_profile="yes"
    MAIN_CFLAGS="$MAIN_CFLAGS -pg -static"
    ;;
  no)
    ac_cv_profile="no"
    ;;
  esac
])
AC_MSG_RESULT($ac_cv_profile)


dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL


AC_CHECK_TYPE(u_int32_t, unsigned int)
AC_CHECK_TYPE(uintptr_t)

rm -f conftest conftest.f

dnl This needs to be near the end for it to work right...
if test "$ac_cv_efence" = "yes"; then
	AC_CHECK_LIB(efence,malloc)
fi


AC_SUBST(INCDEP)

AC_SUBST(SUBDIR_MESSAGES)

AC_SUBST(LDFLAGS)
AC_SUBST(MSGFMT)
AC_SUBST(MAIN_CFLAGS)
AC_SUBST(SEDOBJ)

AC_OUTPUT(                      \
 Makefile                       \
 src/Makefile			\
 src/lang/Makefile		\
)

echo "
Configuration:   

  Services version:                    ${VERSION}
  Install path:                        ${prefix}
  Compiler:                            ${CC}

  Paths set at include/path.h
"
echo "#define BINPATH \"${prefix}/bin\"" > include/path.h
echo "#define ETCPATH \"${prefix}/etc\"" >> include/path.h
echo "#define DATAPATH \"${prefix}/data\"" >> include/path.h
